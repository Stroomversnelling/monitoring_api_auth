openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/energiesprong/user/0.0.3
  - description: Server (relative path)
    url: /energiesprong/user/0.0.3
info:
  version: "0.5.0"
  title: Stroomversnelling UDB Resource Server API
  description: >-
    This API describes how to access user resources for client applications and the performance database. The full documentation for this API (still under development) can be found on https://github.com/Stroomversnelling/monitoring_api/wiki.
#security:
#    - JWTBearerAuth: []

paths:
  /contract:
    get:
      security:
        - JWTBearerAuth: []
      operationId: app.get_contract
      summary: Get all contracts - role per connection.
      description: 
        A list of all contracts. Contracts indicate the time bound role of the user for a particular connection. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/contractList"
  /connection:
    get:
      security:
        - JWTBearerAuth: []
      operationId: app.get_connection
      summary: Get all connections
      description:
        A list of all connections listed in this UDB. Connections are devices/locations with data to which a user has a contract. A PDB token will limit results to connectionIds associated with that PDB.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/connectionList"
  /pdb:
    get:
      security:
        - JWTBearerAuth: []
      operationId: app.get_pdb
      summary: Get all PDBs
      description:
        A list of URLs of the PDB resource servers. Only accessible with a user token.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/pdbUrlList"
components:
  schemas:
    contract:
      type: object
      required:
        - connectionId
        - role
        - start
        - end
      properties:
        connectionId:
          $ref: "#/components/schemas/connection/properties/connectionId" 
        start:
          $ref: "#/components/schemas/dateTimeFormatReadOnly" 
        end:
          $ref: "#/components/schemas/dateTimeFormatReadOnly" 
        role:
          type: string
          description: The role can be one of the following - inhabitant, owner, guaranteeProvider, monitoringServiceProvider, maintenanceProvider, or directServiceProvider.
          enum: [inhabitant, owner, guaranteeProvider, monitoringServiceProvider, maintenanceProvider, directServiceProvider]
          readOnly: true
          example: owner
    connection:
      type: object
      required:
        - connectionId
        - pdbUrl
      properties:
        connectionId:
          type: string
          description: The unique identifier, string, 20 characters, generated by UDB. The combination of connectionId and pdbUrl must always be unique. This can be enforced by requesting information from the target PDB using the envisioned connectionId. The connectionId can, if the connection is a rental home administered by a housing corporation, be generated from a hash of the "businessKey" as defined by VERA 3.1. It should not be the businessKey itself, to limit the potential damage in the case of a data breach. 
          pattern: '^[a-zA-Z0-9]{2,20}$'
          readOnly: true
        pdbUrl:
          type: string
          #pattern: '^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)$'
          description: The URL of the PDB resource server associated with this connectionId. 
          readOnly: true
        address:
          type: string
          description: The address of the connection, in "Streetname NumberAppendix, Zipcode, Town, Country".
          readOnly: true
    pdbUrlList:
      type: array
      items:
        $ref: "#/components/schemas/connection/properties/pdbUrl"
    connectionList:
      type: array
      items:
        $ref: "#/components/schemas/connection"
    contractList:
      type: array
      items:
        $ref: "#/components/schemas/contract"
    dateTimeFormatReadOnly:
      type: string
      format: date-time
      description: Time of the user creation date, in POSIX seconds.
      readOnly: true
  securitySchemes:
  
    JWTBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: app.decode_token